{"ast":null,"code":"var _jsxFileName = \"C:\\\\cursuri\\\\codec\\\\01-starting-project\\\\src\\\\component\\\\Meals\\\\AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport classes from \"./AvailableMeals.module.css\";\nimport MealItem from \"./MealItem/MealItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      try {\n        const response = await fetch(\"https://meniu-rest-513b1-default-rtdb.europe-west1.firebasedatabase.app/meals.json\");\n        if (!response.ok) {\n          throw new Error(\"Something went wrong!\");\n        }\n        const responseData = await response.json();\n        const loadedMeals = Object.entries(responseData).map(_ref => {\n          let [id, meal] = _ref;\n          return {\n            id,\n            ...meal\n          };\n        });\n        setMeals(loadedMeals);\n      } catch (error) {\n        setHttpError(error.message);\n      }\n      setIsLoading(false);\n    };\n    fetchMeals();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    image: meal.image,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(AvailableMeals, \"6pndJp/WWpMtmhSnoCH9k0tFnXc=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["React","useEffect","useState","Card","classes","MealItem","jsxDEV","_jsxDEV","AvailableMeals","_s","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","Object","entries","map","_ref","id","meal","error","message","className","MealsLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","MealsError","mealsList","image","name","description","price","_c","$RefreshReg$"],"sources":["C:/cursuri/codec/01-starting-project/src/component/Meals/AvailableMeals.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport classes from \"./AvailableMeals.module.css\";\r\nimport MealItem from \"./MealItem/MealItem\";\r\n\r\nconst AvailableMeals = () => {\r\n  const [meals, setMeals] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [httpError, setHttpError] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchMeals = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://meniu-rest-513b1-default-rtdb.europe-west1.firebasedatabase.app/meals.json\"\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Something went wrong!\");\r\n        }\r\n\r\n        const responseData = await response.json();\r\n\r\n        const loadedMeals = Object.entries(responseData).map(([id, meal]) => ({\r\n          id,\r\n          ...meal,\r\n        }));\r\n\r\n        setMeals(loadedMeals);\r\n      } catch (error) {\r\n        setHttpError(error.message);\r\n      }\r\n\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchMeals();\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <section className={classes.MealsLoading}>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if (httpError) {\r\n    return (\r\n      <section className={classes.MealsError}>\r\n        <p>{httpError}</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  const mealsList = meals.map((meal) => (\r\n    <MealItem\r\n      key={meal.id}\r\n      id={meal.id}\r\n      image={meal.image}\r\n      name={meal.name}\r\n      description={meal.description}\r\n      price={meal.price}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        <ul>{mealsList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AvailableMeals;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}